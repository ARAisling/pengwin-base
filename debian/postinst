#!/bin/sh
# postinst script for wlinux-base
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)

    chmod u+x /usr/local/bin/wlinux-help

    echo 'Defaults lecture_file = /etc/sudoers.lecture' >> /etc/sudoers
    echo 'Enter your UNIX password below. This is not your Windows password.' >> /etc/sudoers.lecture

    setup_gpgkey="https://packagecloud.io/whitewaterfoundry/wlinux-setup/gpgkey"
    base_gpgkey="https://packagecloud.io/whitewaterfoundry/wlinux-base/gpgkey"

    echo -n "Installing Whitewater Foundry GPG keys..."
    tmpdir=$(mktemp -d)
    cd ${tmpdir}

    curl -L ${setup_gpgkey} -o setup_gpgkey.pub
    curl -L ${base_gpgkey} -o base_gpgkey.pub

    gpg --ignore-time-conflict --no-options --no-default-keyring --keyring ./whitewaterfoundry-archive-keyring.gpg --import base_gpgkey.pub
    gpg --ignore-time-conflict --no-options --no-default-keyring --keyring ./whitewaterfoundry-archive-keyring.gpg --import setup_gpgkey.pub

    if [ ! -d "/etc/apt/trusted.gpg.d" ] ; then
        mkdir -p /etc/apt/trusted.gpg.d
    fi
    mv whitewaterfoundry-archive-keyring.gpg /etc/apt/trusted.gpg.d
    rm -r ${tmpdir}

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
