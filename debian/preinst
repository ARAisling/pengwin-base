#!/bin/sh
# preinst script for wlinux-base
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    install)
	# Ensure all necessary filesystem directories exist
	mkdir -p /etcfonts
	mkdir -p /etc/profile.d
	mkdir -p /etc/apt/sources.list.d
	mkdir -p /etc/dpkg/origins
	
	# List of files we change / require backing up
	FILES="/etc/fonts/local.conf \
		/usr/lib/os-release \
		/etc/environment \
		/etc/bashrc \
		/etc/apt/preferences \
		/etc/apt/sources.list \
		/etc/apt/trusted.gpg"
#		/etc/dpkg/origins/default \
#		/etc/sudoers \
#		/etc/sudoers.lecture"

        # Backup all old files since we over-write a lot of other package's files
	WLINUX_DIR="/etc/wlinux"
	DIVERT_DIR="${WLINUX_DIR}/divert"
	mkdir -p ${WLINUX_DIR}

	for FILE in ${FILES} ; do
	    if [ -f "${FILE}" ] ; then
	        echo "Diverting ${FILE} to ${DIVERT_DIR}"
		COUNT=$(echo ${FILE} | awk -F '/' '{ print NF }')
        	FILENAME=$(echo ${FILE} | cut -d '/' -f $COUNT)
		dpkg-divert --package wlinux-base --add --rename --divert "${WLINUX_DIR}/divert/${FILENAME}" "${FILE}"
	    fi
	done

	# Temporary solution
	if [ -f "/etc/sudoers" ] ; then
	    echo "Diverting /etc/sudoers to ${DIVERT_DIR}"
	    cp /etc/sudoers ${backup_dir}
	fi
	if [ -f "/etc/sudoers.lecture" ] ; then
	    echo "Diverting /etc/sudoers.lecture to ${DIVERT_DIR}"
	    cp /etc/sudoers.lecture ${backup_dir}
	fi
    ;;

    upgrade)
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
