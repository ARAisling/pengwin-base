#!/bin/sh
# preinst script for wlinux-base
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
	install)
		TMPDIR="/run/dpkg.wlinux-base.inst"

		# Ensure all necessary filesystem directories exist
		mkdir -p /etcfonts
		mkdir -p /etc/profile.d
		mkdir -p /etc/apt/sources.list.d
		mkdir -p /etc/dpkg/origins
		mkdir -p ${TMPDIR}
		
		# Here we only need to modify sudoers / sudoers.lecture on
		# non-legacy installs. On legacy installs we also need to
		# remove our previous /etc/profile modifications and delete
		# old wlinux scripts
		if grep -Fq "WLinux" /etc/os-release ; then
			if [ -f "/etc/setup" ] ; then
			if [ -f "/etc/helpme" ] ; then
			echo "WLinux legacy install detected"
			
			echo "Removing legacy wlinux-setup script"
			mv /etc/setup "${TMPDIR}/setup"

			echo "Removing legacy wlinux-help script"
			mv /etc/helpme "${TMPDIR}/helpme"

			whiptail --title "Update /etc/profile" --msgbox "Due to changes in the way that we add wlinux changes to the default profile, your current /etc/profile will be backed up to /etc/profile.old and a new default profile will be downloaded from Debian. All default WLinux changes are now handled by /etc/profile.d/00-wlinux.sh, but personal changes you may have added can either be copied back to /etc/profile, into your personal ~/.profile, or into a new shell-script under /etc/profile.d" 14 80
			echo -n "Downloading default profile..."
			curl "https://salsa.debian.org/rhaist-guest/WSL/raw/master/linux_files/profile" -so "${TMPDIR}/profile"
			echo " Done!"

			echo "Removing old /etc/os-release and placing default symlink"
			mv /etc/os-release "${TMPDIR}"
			ln -s /usr/lib/os-release /etc/os-release

			fi
			fi
		else
			if [ -f "/etc/sudoers" ] ; then
				cp /etc/sudoers "${TMPDIR}"
			fi
			echo 'Defaults lecture_file = /etc/sudoers.lecture' >> "${TMPDIR}/sudoers"

			echo 'Enter your UNIX password below. This is not your Windows password.' >> "${TMPDIR}/sudoers.lecture"
		fi

		# List of files we change / require backing up
		FILES="/etc/fonts/local.conf \
			/usr/lib/os-release \
			/etc/environment \
			/etc/bashrc \
			/etc/apt/preferences \
			/etc/apt/sources.list \
			/etc/apt/trusted.gpg"

		# dpkg-divert all currently existing files since 
		# we overwrite a lot of other package's files
		DIVERT_SUFFIX=".wlinux-divert"

		for FILE in ${FILES} ; do
			if [ -f "${FILE}" ] ; then
				echo "Diverting ${FILE}"
				dpkg-divert --add --rename --divert "${FILE}${DIVERT_SUFFIX}" "${FILE}"
			fi
		done
	;;

	upgrade)
	;;

	abort-upgrade)
	;;

	*)
		echo "preinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
